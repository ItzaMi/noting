[{"/Users/ruisousa/Desktop/Personal/noting/src/reportWebVitals.js":"1","/Users/ruisousa/Desktop/Personal/noting/src/App.js":"2","/Users/ruisousa/Desktop/Personal/noting/src/index.js":"3","/Users/ruisousa/Desktop/Personal/noting/src/components/icons/Delete.js":"4","/Users/ruisousa/Desktop/Personal/noting/src/components/icons/Checkmark.js":"5","/Users/ruisousa/Desktop/Personal/noting/src/components/icons/Edit.js":"6"},{"size":362,"mtime":1606849768686,"results":"7","hashOfConfig":"8"},{"size":4860,"mtime":1609519454883,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1609333884357,"results":"10","hashOfConfig":"8"},{"size":333,"mtime":1609519327221,"results":"11","hashOfConfig":"8"},{"size":707,"mtime":1609517272031,"results":"12","hashOfConfig":"8"},{"size":424,"mtime":1609519197202,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1073api",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ruisousa/Desktop/Personal/noting/src/reportWebVitals.js",[],"/Users/ruisousa/Desktop/Personal/noting/src/App.js",["28"],"import { useState, useEffect } from 'react';\nimport './App.css';\nimport MDEditor from '@uiw/react-md-editor';\n\nimport Delete from './components/icons/Delete';\nimport Checkmark from './components/icons/Checkmark';\nimport Edit from './components/icons/Edit';\nimport View from './components/icons/View';\n\nimport styles from './components/icons/icons.module.css';\n\nconst App = () => {\n  const [data, setData] = useState([{ text: 'Test note\\n# Hello' }]);\n  const [note, setNote] = useState('Start your new note here');\n  const [editMode, setEditMode] = useState(false);\n  const [noteToEdit, setNoteToEdit] = useState('');\n  const [error, setError] = useState(false);\n  const [editorHeight, setEditorHeight] = useState(window.innerHeight);\n\n  const addNote = () => {\n    setData((data) => [...data, { text: note }]);\n    setNote('Start your new note here');\n  };\n\n  const deleteNote = (noteToDelete) => {\n    const arrayOfNotes = data.filter((note) => note.text !== noteToDelete.text);\n    setData(arrayOfNotes);\n  };\n\n  const saveChanges = (noteToEdit, newTextNote) => {\n    const noteToChange = data.filter((note) => note.text === noteToEdit);\n    noteToChange[0].text = newTextNote;\n    setEditMode(false);\n    noteToChange[0].isBeingEdited = false;\n    setNote('Start your new note here');\n  };\n\n  if (error) {\n    setTimeout(() => {\n      setError(false);\n    }, 3000);\n  }\n\n  const updateMDEditorHeight = () => {\n    setEditorHeight(window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener('load', updateMDEditorHeight);\n    window.addEventListener('resize', updateMDEditorHeight);\n  });\n\n  const viewNote = (noteToBeEdit) => {\n    if (editMode) {\n      setError(true);\n      return;\n    }\n    setNote(noteToBeEdit.text);\n    setEditMode(true);\n    noteToBeEdit.isBeingEdited = true;\n    setNoteToEdit(noteToBeEdit.text);\n  };\n\n  const titleOfNote = (noteText) => {\n    let firstPhraseWithoutSpecialCharacters = noteText\n      .split('\\n')[0]\n      .replace(/[^\\w\\s]/gi, '');\n\n    if (firstPhraseWithoutSpecialCharacters.length > 20) {\n      firstPhraseWithoutSpecialCharacters = firstPhraseWithoutSpecialCharacters.substring(\n        0,\n        20\n      );\n      // firstPhraseWithoutSpecialCharacters.substring(0, 70 - 3) + '...';\n    }\n    return firstPhraseWithoutSpecialCharacters;\n  };\n\n  return (\n    <div className=\"relative bg-gray-100 h-screen flex flex-row\">\n      <div className=\"w-9/12\">\n        <MDEditor\n          className=\"py-2 px-5\"\n          id=\"noteinput\"\n          type=\"text\"\n          placeholder=\"Enter a new note\"\n          value={note}\n          onChange={setNote}\n          preview=\"edit\"\n          hideToolbar\n          visiableDragbar={false}\n          height={editorHeight}\n          style={{ height: editorHeight, borderRadius: '0px' }}\n        />\n      </div>\n      <div className=\"w-3/12 bg-gray-200 h-screen overflow-scroll\">\n        {editMode ? (\n          <button\n            className=\"py-2 px-5 w-full bg-gray-700 text-white hover:bg-gray-900 transition-colors duration-200 ease-in-out\"\n            onClick={() => saveChanges(noteToEdit, note)}\n          >\n            Save Changes\n          </button>\n        ) : (\n          <button\n            className=\"py-2 px-5 w-full bg-blue-700 text-white hover:bg-blue-900 transition-colors duration-200 ease-in-out\"\n            onClick={() => addNote()}\n          >\n            Add note\n          </button>\n        )}\n        {data.map((note) => (\n          <div\n            key={note.text}\n            className=\"w-full py-5 px-5 bg-white flex flex-row justify-between content-center border-b-2\"\n          >\n            <p className=\"font-bold text-lg w-9/12\">{titleOfNote(note.text)}</p>\n            <div className=\"w-3/12 flex flex-row justify-end\">\n              <button\n                className=\"text-xs font-light mr-2 text-blue-400 hover:text-blue-500\"\n                onClick={() => viewNote(note)}\n              >\n                <Edit className={styles.editIcon} />\n              </button>\n              <button\n                className=\"text-xs font-light mr-2 text-blue-400 hover:text-blue-500\"\n                onClick={() => viewNote(note)}\n              >\n                <View className={styles.viewIcon} />\n              </button>\n              <button\n                className=\"text-xs font-light mr-2 text-red-400 hover:text-red-500\"\n                onClick={() => deleteNote(note)}\n              >\n                <Delete className={styles.deleteIcon} />\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {error && (\n        <div className=\"absolute p-5 bg-red-200 bottom-10 right-10 align-middle text-red-600\">\n          <p className=\"text-sm\">\n            There's already a note being edited. Finish that one first!\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/Users/ruisousa/Desktop/Personal/noting/src/index.js",[],["29","30"],"/Users/ruisousa/Desktop/Personal/noting/src/components/icons/Delete.js",[],"/Users/ruisousa/Desktop/Personal/noting/src/components/icons/Checkmark.js",[],"/Users/ruisousa/Desktop/Personal/noting/src/components/icons/Edit.js",[],{"ruleId":"31","severity":1,"message":"32","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":17},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"no-unused-vars","'Checkmark' is defined but never used.","Identifier","unusedVar","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-global-assign","no-unsafe-negation"]